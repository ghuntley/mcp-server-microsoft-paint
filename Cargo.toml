[package]
name = "mcp-server-microsoft-paint"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"] # cdylib for potential FFI, rlib for Rust usage

[dependencies]
# MCP Core
mcp_rust_sdk = "0.1.1" # Use the latest version found on crates.io (0.1.1)

# Async Trait
async-trait = "0.1"

# Async Utilities
futures = "0.3"

# Async Runtime
tokio = { version = "1", features = ["full"] } # Need tokio for mcp_rust_sdk examples

# Serialization/Deserialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Windows API Interaction
windows-sys = { version = "0.52", features = [
    "Win32_Foundation",
    "Win32_UI_WindowsAndMessaging",
    "Win32_System_Threading", # For CreateProcess
    "Win32_Graphics_Gdi",     # For GetDeviceCaps, ClientToScreen etc.
    "Win32_UI_Input_KeyboardAndMouse", # For SendInput
    "Win32_System_SystemInformation", # For screen metrics if needed
    "Win32_Storage_FileSystem", # For file operations
    "Win32_Security", # Potentially needed for some operations
    "Win32_UI_Shell", # For ShellExecuteW
    # Add more features as needed
] }

# Error Handling
thiserror = "1.0"

# Logging
log = "0.4"
# env_logger = "0.11" # Replace env_logger with simplelog
simplelog = "0.12"  # Add simplelog

# Base64 Encoding/Decoding
base64 = "0.22"

# Optional: Add development dependencies for testing
[dev-dependencies]
# Add testing-specific crates here if needed, e.g., mocking libraries
